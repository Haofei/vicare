@node includes
@chapter Including source files at expand--time


@cindex Include files
@cindex Loading include files


Include files are loaded at expand--time by the syntax @syntax{include}.
The following bindings are exported by the library @library{vicare}.


@deffn Syntax include @meta{filename}
@deffnx Syntax include @meta{filename} #t
Include in the current source file the contents of the file selected by
the pathname @meta{filename}, which must be a string.  Everything
happens as if the code was present in place of the @func{include} form.
When the optional @true{} argument is given: print a message on the
current error port describing the include operation.
@end deffn


@deffn Parameter current-include-loader
Hold a function used to load an include file.  The referenced function
is called as follows:

@example
((current-include-loader) @meta{include-pathname} @meta{verbose} @meta{synner})
@end example

@noindent
where: @meta{include-pathname} must be a string representing an absolute
or relative pathname; @meta{verbose} can be any value; @meta{synner}
must be a procedure used to raise an exception when an error occurs:

@example
(@meta{synner} @meta{message-string} @meta{irritants})
@end example

When successful, the referenced function must return two values: the
absolute pathname from which the file was loaded, a symbolic expression
representing the file contents (usually such expression is generated by
the reader).  When an error occurs: call the procedure @meta{synner},
which is meant to raise an exception.

If @meta{verbose} is non--false: the referenced function must display
verbose messages on the current error port describing the including
process.
@end deffn


@defun default-include-loader @var{include-pathname} @var{verbose?} @var{synner}
Default value for the parameter @func{current-include-loader}.  Search
an include file with name @var{include-pathname}.  When successful
return two values: the absolute pathname from which the file was loaded,
a symbolic expression representing the file contents.  When an error
occurs: call the procedure @var{synner}, which is meant to raise an
exception.

If @var{verbose?}  is non--false: display verbose messages on the
current error port describing the including process.

The include file is searched using the procedure referenced by the
parameter @func{current-include-file-locator}.  The file is loaded using
the procedure referenced by the parameter
@func{current-include-file-loader}.
@end defun


@deffn Parameter current-include-file-locator
Hold a function used to convert an include file name into the
corresponding file pathname.  The referenced function must accept three
arguments: a string representing the include file name; a boolean, true
if the process of loading must display verbose messages on the current
error port; a synner function used to report errors.

The synner function is called as:

@example
(synner @meta{error-message} @meta{irritants})
@end example
@end deffn


@deffn Parameter current-include-file-loader
Hold a function used to load an include file.  The referenced function
must accept two arguments: a string representing an existent file
pathname; a synner function used to report errors.

The synner function is called as:

@example
(synner @meta{error-message} @meta{irritants})
@end example
@end deffn


@defun default-include-file-locator @var{include-pathname} @var{synner}
Default value for the parameter @func{current-include-file-locator}.
Given a string @var{include-pathname}, which must represent an absolute
or relative file pathname, convert it into the absolute pathname of an
existing file, as string.  Return the absolute string pathname.

If @var{include-pathname} is a relative pathname: the file is searched
in the search path represented by @func{library-source-search-path}, by
appending @var{include-pathname} to the directories in the search path.

@var{synner} must be a procedure used to raise an exception when an
error occurs.
@end defun


@defun default-include-file-loader @var{include-pathname} @var{synner}
Default value for the parameter @func{current-include-file-loader}.
Open the file @var{include-pathname}, read all the datums and return
them.  If an error occurs call @var{synner}.  The returned contents must
be a list of annotated symbolic expressions as generated by the reader.
@end defun


@c Local Variables:
@c mode: texinfo
@c TeX-master: "vicare-scheme"
@c End:
